		public static function getProcessedResponsesFromActions($actions, $allowErrors, $failsafeToken) {
			$reponsueQueue = self::getResponseQueueFromActions($actions);
			$processedResponses = self::processResponseQueue($responseQueue, $actionCount, $allowErrors);
			return $processedResponses;
		}
		
		public static function fillInMissingData(responseQueue) {
			fillInActions = array();
			map responseQueue 
				get responsePackage
				get actions
				map batches
					get batch
					if the response is null
						get the action that corresponds to that response
						$action = array(
							// old action stuff,
							label => array(
								responseIndex,
								batchIndex,
							),
						);
						add action to fillInActions
					end if
				end map
			end map	
			if(filledInActions) {
				$filledInResponseQueue = getResponseQueueFromActions($filledInActions);
				map filledInResponseQueue 
					get the response packaged
					get the batches out of the response package
					map the batches
						get the action that corresponds to response
						get the responseIndex from action
						get the batchIndex from the action
						responseQueue[responseIndex]['batches'][batchIndex] = batch;
					}
				end map
			}
			return responseQueue;	
		}
		
		public static function getResponseQueueFromActions($actions, $allowErrors, $failsafeToken) {
			$actionCount = count($actions);
			$callQueue = self::getCallQueue($actions);
			$formattedCallQueue = self::formatCallQueue($callQueue, $failsafeToken);
			$responseQueue = self::sendAllCalls($formattedCallQueue, $actions);
			$responseQueue = self::fillInMissingData($responseQueue);
		}
		
errorFormat = array(
	array(
		'code' => 200,
		'headers' => array(
		
		),
		'body' => array(
			whatever
		),
	),
	null,
	null,
	null,
);